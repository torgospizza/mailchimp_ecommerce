<?php

/**
 * @file
 * MailChimp eCommerce install and update hooks.
 */

/**
 * Implements hook_uninstall().
 */
function mailchimp_ecommerce_uninstall() {
  variable_del('mailchimp_ecommerce_store_id');
  variable_del('mailchimp_ecommerce_currency');
  variable_del('mailchimp_ecommerce_list_id');
  variable_del('mailchimp_ecommerce_store_name');
  variable_del('mailchimp_ecommerce_store_domain');
}

/**
 * Implements hook_schema().
 */
function mailchimp_ecommerce_schema() {
  $schema['mailchimp_ecommerce_customer'] = [
    'description' => 'Maintains a connection between carts, orders and a MailChimp customer.',
    'fields' => [
      'mailchimp_customer_id' => [
        'description' => 'Primary Key (unique ID).',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'mail' => [
        'description' => 'The customer email.',
        'type' => 'varchar',
        'length' => 254,
        'not null' => FALSE,
      ],
      'orders_count' => [
        'type' => 'int',
        'description' => 'Total orders for this customer.',
        'unsigned' => TRUE,
        'default' => 0,
      ],
      'total_spent' => [
        'type' => 'numeric',
        'description' => 'Total amount spent by this customer.',
        'unsigned' => TRUE,
        'precision' => 19,
        'scale' => 6,
        'default' => 0,
      ],
    ],
    'primary key' => ['mailchimp_customer_id'],
    'indexes' => [
      'mail' => ['mail'],
    ],
  ];

  $schema['mailchimp_ecommerce_order'] = [
    'description' => 'Maintains sync information between MailChimp and Drupal orders.',
    'fields' => [
      'id' => [
        'description' => 'Primary Key (unique ID).',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'order_id' => [
        'description' => 'Internal Drupal order ID.',
        'type' => 'varchar',
        'length' => 254,
        'not null' => FALSE,
      ],
      'store_id' => [
        'description' => 'The MailChimp store ID this product belongs to.',
        'type' => 'varchar',
        'length' => 254,
        'not null' => FALSE,
      ],
      'changed' => [
        'type' => 'int',
        'description' => 'Timestamp when order was last synced.',
        'unsigned' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => ['id'],
    'indexes' => [
      'order_id' => ['order_id', 'store_id'],
    ],
  ];
  return $schema;
}

/**
 * Install the 'mailchimp_ecommerce_customer' table schema.
 */
function mailchimp_ecommerce_update_7002() {
  drupal_install_schema('mailchimp_ecommerce_customer');
}

/**
 * Rename 'mailchimp_ecommerce' table to 'mailchimp_ecommerce_customer'.
 */
function mailchimp_ecommerce_update_7003() {
  // At one point the schema defined a table named 'mailchimp_ecommerce',
  // which should have been named 'mailchimp_ecommerce_customer'.
  // The table is renamed here, if it exists.
  if (db_table_exists('mailchimp_ecommerce')) {
    db_rename_table('mailchimp_ecommerce', 'mailchimp_ecommerce_customer');
  }
}

/**
 * Install the 'mailchimp_ecommerce_order' table to track carts and orders.
 */
function mailchimp_ecommerce_update_7004() {
  if (!db_table_exists('mailchimp_ecommerce_order')) {
    $table = drupal_get_schema_unprocessed('mailchimp_ecommerce', 'mailchimp_ecommerce_order');
    db_create_table('mailchimp_ecommerce_order', $table);
  }
}
